// $dashed-outline: 5px dashed #ff5500;
$solid-outline: 5px solid #444;
$solid-outline-error: 5px solid #ff5500;
// $solid-outline: 5px solid black;

%message-style {
  padding: 5px 10px;
  // background-color: black;
  // color: white;
  font-size: 12px;
  border-radius: 5px;
  display: inline-block;
  margin-left: 10px;
  clear: both;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 600;
}

%error--a11y{
    padding:10px; 
    outline: $solid-outline;
    margin:20px !important;

    &:after{
        @extend %message-style;
        background-color:#F9DEDE;
        color:red;
    }
}

%error--syntax{
  padding:10px; 
  outline: $solid-outline;
  margin:20px !important;

  &:after{
      @extend %message-style;
      background-color:#FFF1D2;
      color:rgb(247, 95, 7);
  }
}

/* ACCESSIBILITY */ 

/* input without id */
input:not([id]){
  @extend %error--a11y;

  outline-color:red;
  // content: "a11y: Give Id to input element"
}

/* label without for */
label:not([for]){
  @extend %error--a11y;

  &:after{
    content: 'a11y: Add for attribute to label';
  }
}

/* buttons without aria-label */
button:not([aria-label]){
  @extend %error--a11y;

  &:after{
    content: 'a11y: no aria-label found';
  }
}

input[type='button'],
input[type='reset'],
input[type='submit']{ 
  &:not([aria-label]){
    border:10px solid yellow;
  }
}

/* GlOBAL CODE */

/* use a lang attribute on html element */
html:not([lang]){
  @extend %error--a11y;

  &:after{
    position: absolute;; 
    padding:30px; top:20px; right:20px;
    content: 'a11y: use a lang attribute on the html element';
    border-radius:10px; 
    box-shadow: 0px 0px 5px 2px rgba(116, 116, 116, 0.31);
  }
}

/*using the correct charset*/
meta[charset]:not([charset="utf-8"]):not([charset="UTF-8"]){
  @extend %error--a11y;

  &:after{
    position: absolute;; 
    padding:30px; top:20px; right:20px;
    content: 'a11y: use a charset of utf-8';
    border-radius:10px; 
    box-shadow: 0px 0px 5px 2px rgba(116, 116, 116, 0.31);
  }
}

/* each page should have a title element */

head > *:not(title){
  background-color:red;
  /* incomplete */
}

/* IMAGES */

/*
to check for images with 
    no alt attribute 
    empty alt attribute
*/

img{
  &:not([alt]), &[alt=""]{
      @extend %error--a11y;

      // &:after{
      //     content:'a11y: Alt attribute should not be empty'
      // }
  }

  // To give height and width to images to prevent page load jank

  &:not([height]):not([width]){
      filter: blur(2px);

      // &:after{
      //     content:"a11y: add widht and height attribut to prevent page load jank"
      // }
  }
}

/* HEADINGS */

/* to check number of h1 elements */
h1:not(:only-of-type){
  @extend %error--a11y;

  &:after{
    content: "a11y: Use only one h1 element per page or view"
  }
}

/* to check the sequence of heading tags */
h6 ~ h1,
h6 ~ h2,
h6 ~ h3,
h6 ~ h4,
h6 ~ h5, 
h5 ~ h1,
h5 ~ h2,
h5 ~ h3,
h5 ~ h4,
h4 ~ h1,
h4 ~ h2,
h4 ~ h3,
h3 ~ h1,
h3 ~ h2,
h2 ~ h1{
  @extend %error--a11y; 

  &:after{
    content: "a11y: Heading elements should be written in a logical sequence, for example, <h2> cannot come before <h1>"
  }
}

/* CONTROL */ 

/* to check for links with 1. no href , 2. empty value for href, 3. # value fo href */
a {
  &:not([href]),
  &[href=""],
  &[href="#"] {
    @extend %error--a11y;

    &:after {
      content: "a11y: href should not be empty or pointing to #";
    }
  }
}


/* SYNTACTICAL ERROR */

/*
ul and ol should only have li as their child elements. 
*/

ul > *:not(li),
ol > *:not(li) {
  @extend %error--syntax;

  &:after{
      content: "syntax: only <li> can be the child of <ul> and <ol> elements"
  }
}
/* fieldset where legend isn't the first child */
fieldset:first-child:not(legend){
  @extend %error--syntax;
  
  &:after{
      content: "syntax: only <legend> should be first child of <fieldset> element"
  }
}

/* h1, div, hr, p inside table */
/* no divs inside inline elements */




/* NO IDEA ABOUT IT */

/* summary must be the first child */

